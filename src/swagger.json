{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Shelter API",
    "description": "This is the API for a room finder application",
    "contact": {
      "email": "pappiah00@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "room-finder-api.herokuapp.com",
  "basePath": "/api/v1",
  "tags": [
    { "name": "Admin", "description": "Endpoints for admins" },
    { "name": "Host", "description": "Endpoints for hosts" },
    { "name": "User", "description": "Endpoints for regular users" }
  ],
  "schemes": ["http", "https"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "responses": {
    "400": {
      "description": "Bad Request",
      "schema": {
        "type": "object",
        "properties": {
          "msg": {
            "type": "string"
          },
          "status": {
            "type": "integer"
          },
          "data": {
            "type": "object"
          }
        }
      }
    },
    "204": {
      "description": "No Content - Resource deleted successfully",
      "schema": {
        "type": "object",
        "properties": {
          "msg": {
            "type": "string"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "BearerAuth": {
      "name": "Authorization",
      "in": "header",
      "type": "apiKey",
      "description": "Authorization header"
    }
  },
  "definitions": {
    "RoomType": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "name": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        }
      }
    },
    "Amenity": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "name": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        }
      }
    },
    "Booking": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "customer": {
          "type": "object",
          "$ref": "#/definitions/Customer"
        },
        "property": {
          "type": "object",
          "$ref": "#/definitions/Property"
        },
        "status": {
          "type": "string",
          "enum": ["pending", "complete", "cancelled"]
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "Property": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "owner": {
          "type": "integer",
          "format": "int64",
          "description": "ID of the profile - host in this case (not the user itself)"
        },
        "name": {
          "type": "string"
        },
        "referenceNo": {
          "type": "string"
        },
        "roomType": {
          "type": "integer",
          "format": "int64"
        },
        "price": {
          "type": "integer",
          "format": "int64"
        },
        "numOfBedrooms": {
          "type": "integer",
          "format": "int64"
        },
        "numOfBathrooms": {
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "stayPeriod": {
          "type": "string",
          "enum": ["day", "night", "week", "month", "year"]
        },
        "images": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "amenities": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "isApproved": {
          "type": "boolean",
          "default": false,
          "readOnly": true
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      },
      "required": [
        "name",
        "roomType",
        "price",
        "description",
        "location",
        "stayPeriod",
        "amenities"
      ]
    },
    "Customer": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "integer",
          "readOnly": true
        },
        "user_id": {
          "type": "integer",
          "readOnly": true
        },
        "firstname": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "bookings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Property"
          }
        },
        "profilePicture": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "integer",
          "readOnly": true
        },
        "firstname": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "userType": {
          "type": "string",
          "enum": ["user", "admin", "host"]
        },
        "profilePicture": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "Host": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "integer",
          "readOnly": true
        },
        "user_id": {
          "type": "integer",
          "format": "int64"
        },
        "firstname": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "profilePicture": {
          "type": "string"
        },
        "isVerified": {
          "type": "boolean"
        },
        "phone": {
          "type": "string"
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "Otp": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "integer",
          "readOnly": true
        },
        "email": {
          "type": "string",
          "uniqueItems": true
        },
        "code": {
          "type": "string",
          "format": "int64"
        },
        "expiryDate": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    }
  },
  "paths": {
    "/signup": {
      "post": {
        "tags": ["Host", "User"],
        "description": "Sign up a new user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "required": ["email", "firstname", "lastname", "userType"],
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email"
                },
                "firstname": {
                  "type": "string"
                },
                "lastname": {
                  "type": "string"
                },
                "userType": {
                  "type": "string",
                  "enum": ["admin", "host", "user"],
                  "default": "user"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "otp": {
                  "type": "string"
                },
                "user": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/400"
          }
        }
      }
    },
    "/otp": {
      "post": {
        "description": "Get OTP code",
        "tags": ["Admin", "Host", "User"],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "required": ["email"],
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "data": {
                  "$ref": "#/definitions/Otp"
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": ["Admin", "Host", "User"],
        "description": "Log in a registered user",
        "parameters": [
          {
            "name": "body",
            "in": "body",

            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "otp": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "token": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/logout": {
      "post": {
        "description": "Logs out current user",
        "tags": ["Admin", "Host", "User"],
        "security": [{ "BearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                }
              }
            }
          }
        }
      }
    },

    "/dashboard-reports": {
      "get": {
        "tags": ["Admin"],
        "description": "This returns the dashboard data for the admin - this includes total users and (un)approved listings",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "security": [{ "BearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": ["Admin"],
        "description": "Creates a user",
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstname": {
                  "type": "string"
                },
                "lastname": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "userType": {
                  "type": "string",
                  "enum": ["admin", "customer", "host"],
                  "default": "customer"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string"
                },
                "user": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          },
          "400": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string"
                },
                "fields": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Admin"],
        "description": "Returns a list of all registered users",
        "security": [{ "BearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        }
      }
    },

    "/bookings": {
      "get": {
        "tags": ["Admin"],
        "description": "Returns all bookings",
        "security": [{ "BearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Booking"
              }
            }
          }
        }
      }
    },

    "/customer-bookings/{property_id}": {
      "get": {
        "description": "Checks if property has already been booked - booking exists when a booking reference is returned",
        "tags": ["User"],
        "security": [{ "BearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Booking"
            }
          }
        }
      },
      "patch": {
        "description": "Cancels booking session",
        "tags": ["User"],
        "security": [{ "BearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Booking"
            }
          }
        }
      }
    },

    "/customer-bookings": {
      "get": {
        "tags": ["User"],
        "description": "Returns a list of bookings belonging to the logged in customer",
        "produces": ["application/json"],
        "security": [{ "BearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/Booking"
              }
            }
          }
        }
      }
    },

    "/users/{user_id}": {
      "patch": {
        "tags": ["Admin"],
        "description": "Updates a user",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "type": "number",
            "required": true
          },
          {
            "name": "Edit Payload",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstname": {
                  "type": "string"
                },
                "lastname": {
                  "type": "string"
                },
                "userType": {
                  "type": "string",
                  "enum": ["admin", "customer", "host"],
                  "default": "customer"
                }
              },
              "required": ["firstname", "lastname", "email", "userType"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string"
                },
                "status": {
                  "type": "number"
                },
                "data": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string"
                },
                "status": {
                  "type": "number"
                },
                "data": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Admin"],
        "description": "Deletes a user",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "type": "number",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string"
                },
                "status": {
                  "type": "number"
                },
                "deletedUserId": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string"
                },
                "status": {
                  "type": "number"
                }
              }
            }
          }
        }
      }
    },

    "/property": {
      "get": {
        "description": "Returns a list of properties",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Admin", "Host", "User"],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Property"
              }
            }
          }
        }
      },
      "post": {
        "description": "Create a property",
        "tags": ["Admin"],
        "security": [{ "BearerAuth": [] }],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Property",
              "required": [
                "owner",
                "name",
                "roomType",
                "price",
                "description",
                "location",
                "stayPeriod",
                "images"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Property"
            }
          }
        }
      }
    },
    "/property/{id}": {
      "get": {
        "description": "Returns a single property",
        "tags": ["Admin", "Host", "User"],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Property ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "data": {
                  "$ref": "#/definitions/Property"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "data": {
                  "$ref": "#/definitions/Property"
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Update a property",
        "tags": ["Admin"],
        "security": [{ "BearerAuth": [] }],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Property ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Property"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "data": {
                  "$ref": "#/definitions/Property"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "data": {
                  "$ref": "#/definitions/Property"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete a property",
        "tags": ["Admin"],
        "security": [{ "BearerAuth": [] }],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Property ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },

    "/approve": {
      "patch": {
        "description": "Update a property",
        "tags": ["Admin"],
        "security": [{ "BearerAuth": [] }],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "property_id",
            "in": "query",
            "description": "Property ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "required": ["isApproved"],
              "properties": {
                "isApproved": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "data": {
                  "$ref": "#/definitions/Property"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "data": {
                  "$ref": "#/definitions/Property"
                }
              }
            }
          }
        }
      }
    },

    "/hosts": {
      "get": {
        "description": "Returns all registered hosts",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Admin"],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Host"
              }
            }
          }
        }
      }
    },
    "/hosts/{id}": {
      "get": {
        "description": "Returns a single host",
        "tags": ["Admin"],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Host ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "data": {
                  "$ref": "#/definitions/Host"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "data": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Update a host",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Admin"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Host ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Host"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "data": {
                  "$ref": "#/definitions/Host"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "data": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "data": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete a host",
        "tags": ["Admin"],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Host ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "schema": {
              "type": "object"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "data": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },

    "/room-types": {
      "get": {
        "description": "Returns a list of all room types",
        "tags": ["Admin", "User", "Host"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RoomType"
              }
            }
          },
          "400": {
            "$ref": "#/responses/400"
          }
        }
      },
      "post": {
        "description": "Creates a new room type",
        "tags": ["Admin"],
        "security": [{ "BearerAuth": [] }],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "x-42c-sample": null,
            "name": "body",
            "in": "body",
            "description": "Room type object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RoomType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RoomType"
            }
          }
        }
      }
    },
    "/room-types/{id}": {
      "get": {
        "description": "Returns a single room type",
        "tags": ["Admin", "User", "Host"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/RoomType"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          }
        }
      },
      "patch": {
        "description": "Update a room type",
        "tags": ["Admin"],
        "security": [{ "BearerAuth": [] }],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RoomType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RoomType"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          }
        }
      },
      "delete": {
        "description": "Deletes a room type",
        "tags": ["Admin"],
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204"
          }
        }
      }
    },

    "/amenities": {
      "get": {
        "description": "Returns a list of all amenities",
        "tags": ["Admin", "User", "Host"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Amenity"
              }
            }
          }
        }
      },
      "post": {
        "description": "Create an amenity",
        "tags": ["Admin"],
        "security": [{ "BearerAuth": [] }],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Amenity object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Amenity"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Amenity"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          }
        }
      }
    },
    "/amenities/{id}": {
      "get": {
        "description": "Returns an amenity",
        "tags": ["Admin", "Host", "User"],
        "produces": ["application/json"],
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Amenity"
            }
          }
        }
      },
      "patch": {
        "description": "Update an amenity",
        "tags": ["Admin"],
        "security": [{ "BearerAuth": [] }],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "payload",
            "in": "body",
            "schema": {
              "type": "object",
              "required": ["name", "icon"],

              "properties": {
                "name": {
                  "type": "string",
                  "example": "Wi-Fi"
                },
                "icon": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update success",
            "schema": {
              "$ref": "#/definitions/Amenity"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes an amenity",
        "tags": ["Admin"],
        "security": [{ "BearerAuth": [] }],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204"
          }
        }
      }
    }
  }
}
